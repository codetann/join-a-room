{"version":3,"sources":["context/Provider.js","pages/Join.jsx","pages/Chatroom.jsx","App.js","index.js"],"names":["socket","io","AppContext","createContext","useAppContext","useContext","Provider","children","useState","username","setUsername","uuid","userId","setUserId","roomId","setRoomId","messages","setMessages","darkMode","setDarkMode","receiveMessage","on","data","message","prevState","useEffect","sendMessage","emit","signIn","value","Join","nameRef","useRef","roomRef","history","useHistory","error","setError","Container","Header","ToggleTheme","onClick","Icon","className","Wrapper","Input","ref","placeholder","type","Button","current","push","styled","div","props","input","button","i","Chatroom","inputRef","endRef","scrollIntoView","behavior","BackIcon","e","preventDefault","role","MessagesContainer","map","msg","UserDiv","UserMessage","Username","OtherDiv","OtherMessage","InputContainer","Send","p","form","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.02b43c60.chunk.js","sourcesContent":["import React, { useState, createContext, useContext, useEffect } from \"react\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport { io } from \"socket.io-client\";\r\n\r\nconst socket = io(\"/\");\r\n\r\nconst AppContext = createContext();\r\n\r\nexport const useAppContext = () => {\r\n  return useContext(AppContext);\r\n};\r\n\r\nexport default function Provider({ children }) {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [userId, setUserId] = useState(uuid());\r\n  const [roomId, setRoomId] = useState(\"\");\r\n  const [messages, setMessages] = useState([]);\r\n  const [darkMode, setDarkMode] = useState(true);\r\n\r\n  function signIn(data) {\r\n    /* resets the messages array when a user quits and signs in again */\r\n    setMessages([]);\r\n    /* sends room name, username, and id to the server */\r\n    const { roomId, username } = data;\r\n    socket.emit(\"sign-in\", {\r\n      roomId,\r\n      username,\r\n      userId,\r\n    });\r\n    setUsername(username);\r\n    setRoomId(roomId);\r\n  }\r\n  function sendMessage(data) {\r\n    socket.emit(\"message\", data);\r\n  }\r\n  function receiveMessage() {\r\n    socket.on(\"message\", (data) => {\r\n      const { message, userId, username } = data;\r\n\r\n      setMessages((prevState) => [...prevState, { message, userId, username }]);\r\n    });\r\n    socket.on(\"sign-in\", (data) => {\r\n      const { message, userId, username } = data;\r\n\r\n      setMessages((prevState) => [...prevState, { message, userId, username }]);\r\n    });\r\n  }\r\n  function disconnect() {\r\n    socket.on(\"disconnection\", (data) => {\r\n      const { message, userId, username } = data;\r\n      setMessages((prevState) => [...prevState, { message, userId, username }]);\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    /* adds a new message when a user joins the chat */\r\n    receiveMessage();\r\n    disconnect();\r\n  }, []);\r\n\r\n  const data = {\r\n    socket,\r\n    username,\r\n    userId,\r\n    roomId,\r\n    messages,\r\n    receiveMessage,\r\n    sendMessage,\r\n    signIn,\r\n    darkMode,\r\n    setDarkMode,\r\n    setUserId,\r\n  };\r\n\r\n  return <AppContext.Provider value={data}>{children}</AppContext.Provider>;\r\n}\r\n","import React, { useRef, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { useAppContext } from \"../context/Provider\";\r\n\r\nexport default function Join() {\r\n  const nameRef = useRef();\r\n  const roomRef = useRef();\r\n  const history = useHistory();\r\n  const [error, setError] = useState(false);\r\n  const { signIn, darkMode, setDarkMode } = useAppContext();\r\n\r\n  // Functions\r\n  const handleSignIn = () => {\r\n    if (nameRef.current.value === \"\" || roomRef.current.value === \"\") {\r\n      /* throws error for required fields  */\r\n      setError(\"Please enter a username and room\");\r\n      return;\r\n    }\r\n\r\n    // Signs in user and sends info to server\r\n    signIn({\r\n      roomId: roomRef.current.value,\r\n      username: nameRef.current.value,\r\n    });\r\n\r\n    /* takes user to the chatroom component/page */\r\n    history.push(\"/chatroom\");\r\n\r\n    /* reset the inputs to their default state */\r\n    nameRef.current.value = \"\";\r\n    roomRef.current.value = \"\";\r\n  };\r\n\r\n  return (\r\n    <Container darkMode={darkMode}>\r\n      <Header darkMode={darkMode}>\r\n        <ToggleTheme onClick={() => setDarkMode((prevState) => !prevState)}>\r\n          <Icon\r\n            darkMode={darkMode}\r\n            className={`fas fa-${darkMode ? \"moon\" : \"sun\"}`}\r\n          />\r\n        </ToggleTheme>\r\n      </Header>\r\n      <h1>Join a Room</h1>\r\n      <hr />\r\n      {error && <p>{error}</p>}\r\n      <Wrapper darkMode={darkMode}>\r\n        <i className=\"far fa-user\" />\r\n        <Input\r\n          ref={nameRef}\r\n          placeholder=\"Username\"\r\n          darkMode={darkMode}\r\n          type=\"text\"\r\n        />\r\n      </Wrapper>\r\n      <Wrapper darkMode={darkMode}>\r\n        <i className=\"fas fa-home\" />\r\n        <Input\r\n          ref={roomRef}\r\n          placeholder=\"Room Name\"\r\n          darkMode={darkMode}\r\n          type=\"text\"\r\n        />\r\n      </Wrapper>\r\n      <Button onClick={handleSignIn}>Join</Button>\r\n    </Container>\r\n  );\r\n}\r\n\r\n// - Styled Components - //\r\nconst Container = styled.div`\r\n  transition: 0.3s;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  background: ${(props) => (props.darkMode ? \"#0D1117\" : \"white\")};\r\n\r\n  hr {\r\n    height: 6px;\r\n    width: 40px;\r\n    background: #0dca92;\r\n    border: none;\r\n    border-radius: 0.4rem;\r\n    margin-bottom: 2rem;\r\n    transition: 0.3s;\r\n  }\r\n  h1 {\r\n    color: #0dca92;\r\n    margin-bottom: 2rem;\r\n    font-weight: bold;\r\n    font-size: 45px;\r\n    transition: 0.3s;\r\n  }\r\n\r\n  p {\r\n    font-weight: lighter;\r\n    margin-bottom: 1rem;\r\n    color: #ff0000;\r\n    transition: 0.3s;\r\n  }\r\n`;\r\nconst Header = styled.div`\r\n  transition: 0.3s;\r\n  position: fixed;\r\n  width: 100%;\r\n  max-width: 1000px;\r\n  background: ${(props) => (props.darkMode ? \"#0D1117\" : \"white\")};\r\n  color: ${(props) => (props.darkMode ? \"white\" : \"black\")};\r\n  height: 5rem;\r\n  top: 0;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n  padding: 0 1rem;\r\n`;\r\nconst Wrapper = styled.div`\r\n  transition: 0.3s;\r\n  width: 300px;\r\n  height: 50px;\r\n  border: 2px solid ${(props) => (props.darkMode ? \"#616f83\" : \"#bebebe\")};\r\n  color: ${(props) => (props.darkMode ? \"#47566b\" : \"#bebebe\")};\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 0.4rem;\r\n  transition: 0.2s;\r\n  margin: 1rem 0;\r\n\r\n  &:focus-within {\r\n    border: 2px solid #0dca92;\r\n\r\n    i {\r\n      color: #0dca92;\r\n    }\r\n  }\r\n\r\n  i {\r\n    transition: 0.2s;\r\n    width: 20%;\r\n    height: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    font-size: 18px;\r\n  }\r\n\r\n  &:hover {\r\n    border: 2px solid #0dca92;\r\n\r\n    i {\r\n      color: #0dca92;\r\n    }\r\n  }\r\n`;\r\nconst Input = styled.input`\r\n  transition: 0.3s;\r\n  width: 100%;\r\n  height: 100%;\r\n  border: none;\r\n  border-radius: 0.4rem;\r\n  outline: none;\r\n  color: ${(props) => (props.darkMode ? \"#ffffff\" : \"#1f1f1f\")};\r\n\r\n  &::placeholder {\r\n    color: ${(props) => (props.darkMode ? \"#616f83\" : \"#bebebe\")};\r\n  }\r\n`;\r\nconst Button = styled.button`\r\n  padding: 1rem 3rem;\r\n  background-color: #0dca92;\r\n  color: white;\r\n  font-weight: bold;\r\n  border-radius: 2rem;\r\n  border: none;\r\n  outline: none;\r\n  margin-top: 2rem;\r\n  cursor: pointer;\r\n  transition: 0.2s;\r\n\r\n  &:hover {\r\n    opacity: 0.8;\r\n  }\r\n`;\r\nconst ToggleTheme = styled.button`\r\n  border: none;\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 0;\r\n  background: none;\r\n`;\r\n\r\nconst Icon = styled.i`\r\n  transition: 0.3s;\r\n  font-size: 28px;\r\n  background: none;\r\n  color: ${(props) => (props.darkMode ? \"#9b94fa\" : \"#F7BC07\")};\r\n  border: none;\r\n  cursor: pointer;\r\n`;\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport { useAppContext } from \"../context/Provider\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nexport default function Chatroom() {\r\n  const inputRef = useRef();\r\n  const endRef = useRef(null);\r\n  const history = useHistory();\r\n  const {\r\n    sendMessage,\r\n    messages,\r\n    roomId,\r\n    userId,\r\n    username,\r\n    darkMode,\r\n    setDarkMode,\r\n  } = useAppContext();\r\n\r\n  /* sends the messages view to the current message at the bottom */\r\n  const scrollToBottom = () => {\r\n    endRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  /* sends message to the server and then to the other chatroom members */\r\n  const handleSend = (e) => {\r\n    e.preventDefault();\r\n    if (inputRef.current.value === \"\") return;\r\n\r\n    /* sends message to server */\r\n    sendMessage({\r\n      userId,\r\n      message: inputRef.current.value,\r\n      roomId,\r\n      username,\r\n    });\r\n\r\n    inputRef.current.value = \"\";\r\n  };\r\n\r\n  /* sends the user back to the home screen */\r\n  const handleHome = (e) => {\r\n    e.preventDefault();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  // Scroll to bottom when new message is sent\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  // Sends user back to sign in page if they refresh on chat page\r\n  useEffect(() => {\r\n    if (roomId === \"\") history.push(\"/\");\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <Container darkMode={darkMode}>\r\n      <Header darkMode={darkMode}>\r\n        <>\r\n          <BackIcon\r\n            onClick={handleHome}\r\n            role=\"button\"\r\n            className=\"fas fa-arrow-left\"\r\n          />\r\n          <p>Room: {roomId}</p>\r\n        </>\r\n        <ToggleTheme onClick={() => setDarkMode((prevState) => !prevState)}>\r\n          <Icon\r\n            darkMode={darkMode}\r\n            className={`fas fa-${darkMode ? \"moon\" : \"sun\"}`}\r\n          />\r\n        </ToggleTheme>\r\n      </Header>\r\n      <MessagesContainer>\r\n        {messages.map((msg, i) =>\r\n          msg.userId === userId ? (\r\n            <UserDiv key={i} darkMode={darkMode}>\r\n              <UserMessage>{msg.message}</UserMessage>\r\n              <Username darkMode={darkMode}>{msg.username}</Username>\r\n            </UserDiv>\r\n          ) : (\r\n            <OtherDiv key={i} darkMode={darkMode}>\r\n              <OtherMessage darkMode={darkMode}>{msg.message}</OtherMessage>\r\n              <Username darkMode={darkMode}>{msg.username}</Username>\r\n            </OtherDiv>\r\n          )\r\n        )}\r\n        <InputContainer darkMode={darkMode}>\r\n          <Input ref={inputRef} type=\"text\" darkMode={darkMode} />\r\n          <Send onClick={handleSend}>Send</Send>\r\n        </InputContainer>\r\n        <div ref={endRef} />\r\n      </MessagesContainer>\r\n    </Container>\r\n  );\r\n}\r\n\r\n// - Styled Components - //\r\nconst Container = styled.div`\r\n  transition: 0.3s;\r\n  width: 100%;\r\n  min-height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: flex-end;\r\n  padding: 4rem 1rem;\r\n  background: ${(props) => (props.darkMode ? \"#0D1117\" : \"white\")};\r\n`;\r\n\r\n// Messages\r\nconst MessagesContainer = styled.div`\r\n  transition: 0.3s;\r\n  bottom: 0;\r\n  width: 100%;\r\n  max-width: 1000px;\r\n  padding: 0 1rem;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  max-height: 100%;\r\n`;\r\nconst UserDiv = styled.div`\r\n  transition: 0.3s;\r\n  height: auto;\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: flex-end;\r\n  flex-direction: column;\r\n  margin: 1rem;\r\n`;\r\nconst UserMessage = styled.p`\r\n  transition: 0.3s;\r\n  padding: 1rem;\r\n  background: #0dca92;\r\n  color: white;\r\n  border-radius: 1.3rem 1.3rem 0.3rem 1.3rem;\r\n  max-width: 90%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  transition: 0.3s;\r\n`;\r\nconst OtherDiv = styled.div`\r\n  height: auto;\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: flex-start;\r\n  flex-direction: column;\r\n  margin: 1rem;\r\n  transition: 0.3s;\r\n`;\r\nconst Username = styled.p`\r\n  transition: 0.3s;\r\n  transition: 0.3s;\r\n  font-size: 14px;\r\n  color: ${(props) => (props.darkMode ? \"white\" : \"black\")};\r\n`;\r\nconst OtherMessage = styled.p`\r\n  transition: 0.3s;\r\n  padding: 1rem;\r\n  background: ${(props) => (props.darkMode ? \"#222b38\" : \"#f7f7f5\")};\r\n  color: ${(props) => (props.darkMode ? \"white\" : \"#131313\")};\r\n  border-radius: 1.3rem 1.3rem 1.3rem 0.3rem;\r\n  max-width: 90%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\n// Back Button\r\nconst Header = styled.div`\r\n  transition: 0.3s;\r\n  position: fixed;\r\n  z-index: 3;\r\n  width: 100%;\r\n  max-width: 1000px;\r\n  background: ${(props) => (props.darkMode ? \"#0D1117\" : \"white\")};\r\n  color: ${(props) => (props.darkMode ? \"white\" : \"black\")};\r\n  height: 5rem;\r\n  top: 0;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 0 1rem;\r\n`;\r\nconst BackIcon = styled.i`\r\n  font-size: 18px;\r\n  margin-right: 1rem;\r\n  cursor: pointer;\r\n`;\r\n\r\n// Inputs\r\nconst InputContainer = styled.form`\r\n  transition: 0.3s;\r\n  position: fixed;\r\n  width: 100%;\r\n  max-width: 1000px;\r\n  background: ${(props) => (props.darkMode ? \"#0D1117\" : \"white\")};\r\n  height: 5rem;\r\n  bottom: 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 0 1rem;\r\n`;\r\nconst Input = styled.input`\r\n  transition: 0.3s;\r\n  height: 3rem;\r\n  width: 80%;\r\n  border: 2px solid ${(props) => (props.darkMode ? \"#222b38\" : \"#bebebe\")};\r\n  color: ${(props) => (props.darkMode ? \"white\" : \"black\")};\r\n  outline: none;\r\n  padding-left: 1rem;\r\n  border-radius: 1.5rem 0 0 1.5rem;\r\n`;\r\nconst Send = styled.button`\r\n  width: 20%;\r\n  height: 3rem;\r\n  cursor: pointer;\r\n  background: #0dca92;\r\n  color: white;\r\n  font-weight: bold;\r\n  border-radius: 0 1.5rem 1.5rem 0rem;\r\n  border: 1px solid #0dca92;\r\n`;\r\nconst ToggleTheme = styled.button`\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  font-size: 24px;\r\n`;\r\n\r\nconst Icon = styled.i`\r\n  transition: 0.3s;\r\n  font-size: 28px;\r\n  background: none;\r\n  color: ${(props) => (props.darkMode ? \"#9b94fa\" : \"#F7BC07\")};\r\n  border: none;\r\n  cursor: pointer;\r\n`;\r\n","import { BrowserRouter as Router, Route } from \"react-router-dom\";\n// pages\nimport Join from \"./pages/Join\";\nimport Chatroom from \"./pages/Chatroom\";\n\nfunction App() {\n  return (\n    <Router>\n      <Route path=\"/\" exact component={Join} />\n      <Route path=\"/chatroom\" component={Chatroom} />\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport Provider from \"./context/Provider\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}